@page "/{worldName?}"
@using Wanderland.Web.Client.Services
@using Wanderland.Web.Shared
@inject WanderlandHubClient _hubClient
@inject IWanderlandHttpApiClient _apiClient

<PageTitle>wanderland.cloud</PageTitle>

<MudGrid Spacing="2">
    <MudItem xs="8">
        <MudPaper Elevation="8" Class="px-4 py-6">
            <WorldGrid WorldName="@WorldName" />
        </MudPaper>
        <GrainCount />
    </MudItem>
    <MudItem xs="4">
        <WorldSummary WorldName="@WorldName"/>
        <PlayerList />
        <ServerStatistics />
    </MudItem>
</MudGrid>

@code
{
    [Parameter]
    public string? WorldName { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _hubClient.WorldListUpdate -= RefreshWorlds;
            _hubClient.WorldListUpdate += RefreshWorlds;
            await _hubClient.Start();
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(WorldName))
        {
            await RefreshWorlds(null);
        }

        await base.OnInitializedAsync();
    }

    private async Task RefreshWorlds(WorldListUpdatedEventArgs? _)
    {
        try
        {
            var worlds = await _apiClient.GetWorlds();
            if (worlds.Count > 0)
            {
                WorldName = worlds.First().Name;
            }
        }
        finally
        {
            StateHasChanged();
        }
    }
}
